name: Test Terraform

on:
  push:
    branches:
      - main  # Adjust the branch as per your requirement

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Display repository contents-check
        run: |
          echo "Displaying repository contents..."
          ls -R


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false  # Ensure terraform_wrapper is set to false    

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./Terraform

      - name: Plan Terraform
        run: terraform plan
        working-directory: ./Terraform

      - name: Apply Terraform
        run: terraform apply --auto-approve
        working-directory: ./Terraform

      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: ./Terraform  # Adjust the path to your Terraform configuration directory

      - name: Display Public IP
        run: |
          echo "Public IP Address: ${{ steps.tf-outputs.outputs.web_server_public_ip }}"
        
      - name: Generate Ansible Inventory
        run: |
          echo "[my_ec2_instances]" > ./Ansible/ansible_inventory.ini
          echo "${{ steps.tf-outputs.outputs.web_server_public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=./Ansible/access_to_ec2.pem" >> ./Ansible/ansible_inventory.ini
    
      - name: Display Ansible Inventory
        run: |
          echo "Contents of Ansible Inventory:"
          cat ./Ansible/ansible_inventory.ini    

      - name: Display Contents of pem
        run: |
          echo "Contents of Ansible Inventory:"
          cat ./Ansible/access_to_ec2.pem           

      - name: Set permissions for access_key.pem
        run: |
          chmod 400 ./Ansible/access_to_ec2.pem         

      - name: Run Ansible playbook
        run: |
          ansible-playbook -i ./Ansible/ansible_inventory.ini ./Ansible/installDjangoapp.yaml
  
  
      - name: Wait for 2 minutes
        run: sleep 200

      # Add finally block to ensure destroy step is always executed
      - name: Clean up Terraform
        if: always()  # Ensure this step runs regardless of previous steps
        run: terraform destroy --auto-approve
        working-directory: ./Terraform