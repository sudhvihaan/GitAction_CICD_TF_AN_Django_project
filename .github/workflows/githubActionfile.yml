name: Test Terraform

on:
  push:
    branches:
      - main  # Adjust the branch as per your requirement-tttt

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2



      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Initialize Terraform
        run: terraform init
        working-directory: Terraform

      - name: Plan Terraform
        run: terraform plan
        working-directory: Terraform

      - name: Apply Terraform
        run: terraform apply --auto-approve
        working-directory: ./Terraform

      - name: Get outputs
        uses: dflook/terraform-output@v1
        id: tf-outputs
        with:
          path: ./Terraform  # Adjust the path to your Terraform configuration directory

      - name: Display Public IP
        run: |
          echo "Public IP Address: ${{ steps.tf-outputs.outputs.web_server_public_ip }}"
        
      - name: Generate Ansible Inventory
        run: |
          echo "[my_ec2_instances]" > ./Ansible/ansible_inventory.ini
          echo "${{ steps.tf-outputs.outputs.web_server_public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=./Ansible/access_to_ec2.pem" >> ./Ansible/ansible_inventory.ini
    












      - name: Display repository contents-check
        run: |
          echo "Displaying repository contents..."
          ls -R
  
      - name: Generate Ansible Inventory
        run: |
          echo "[my_ec2_instances]" > ./Ansible/ansible_inventory.ini
          echo "${{ steps.tf-outputs.outputs.web_server_public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=/home/runner/.ssh/id_rsa" >> ./Ansible/ansible_inventory.ini
    
      - name: Display Ansible Ini
        run: |
          echo "Contents of Ansible Inventory:"
          cat ./Ansible/ansible_inventory.ini    

      - name: Display Contents in Ansible Folder
        run: |
            ls ./Ansible
               
      - name: Display pem file
        run: |
            cat ./Ansible/access_to_ec2.pem
                   
      - name: Display ansible_inventory.ini
        run: |
            cat ./Ansible/ansible_inventory.ini
                       
      - name: Display ansible playbook
        run: |
            cat ./Ansible/installDjangoapp.yaml
                                                  



      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
           playbook: ./Ansible/installDjangoapp.yaml
           key: ${{ secrets.SSH_KEY }}
           inventory: |
             [my_ec2_instances]
             ${{ steps.tf-outputs.outputs.web_server_public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=/home/runner/.ssh/id_rsa
           known_hosts: |
             ${{ steps.tf-outputs.outputs.web_server_public_ip }} $(ssh-keyscan -H ${{ steps.tf-outputs.outputs.web_server_public_ip }} 2>/dev/null | awk '{print $3}')
           options: |
             --inventory ./Ansible/ansible_inventory.ini
             --verbose
        env:
           AWS_DEFAULT_REGION: eu-west-2
           AWS_REGION: eu-west-2
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    


      - name: Wait for 2 minutes
        if: always()  # Ensure this step runs regardless of previous steps
        run: sleep 200
    
          # Add finally block to ensure destroy step is always executed
      - name: Clean up Terraform
        if: always()  # Ensure this step runs regardless of previous steps
        run: terraform destroy --auto-approve
        working-directory: ./Terraform